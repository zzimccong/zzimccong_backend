pipeline {
    agent any

    environment {
        // Git 설정
        GIT_MAIN_NAME = "zzimccong"
        GIT_PRJ_NAME = "zzimccong_backend"
        GIT_BRANCH_NAME = "dev"

        // Docker 이미지 설정
        JAVA_BASE_IMAGE = "openjdk:11-jdk-slim"

        // SSH 설정
        SSH_USER = "ubuntu"
        SSH_HOST = "ec2-15-168-10-98.ap-northeast-3.compute.amazonaws.com"
    }

    stages {
        stage('Clone Source in Jenkins') {
            steps {
                script {
                    echo "--------------------"
                    echo "[Clone Source in Jenkins]"
                    echo "--------------------"
                    sh "git clone --branch ${GIT_BRANCH_NAME} https://github.com/${GIT_MAIN_NAME}/${GIT_PRJ_NAME}.git"
                }
            }
        }
        
        stage('Prepare Workspace in Target Server') {
            steps {
                echo "--------------------"
                echo "[Prepare Workspace in Target Server]"
                echo "--------------------"

                sh "tar -cvf ${GIT_PRJ_NAME}.tar ${GIT_PRJ_NAME}"
                sh "rm -rf ${GIT_PRJ_NAME}"

                script {
                    sshagent(credentials: ['jenkins_ssh_key']) {
                        sh """
                        scp -o StrictHostKeyChecking=no ${GIT_PRJ_NAME}.tar ${SSH_USER}@${SSH_HOST}:/home/ubuntu
                        ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} 'tar -xvf /home/ubuntu/${GIT_PRJ_NAME}.tar'
                        """
                    }
                }
            }
        }

        stage('Pull Java Docker Image') {
            steps {
                script {
                    echo "--------------------"
                    echo "[Pull Java Docker Image]"
                    echo "--------------------"

                    sshagent(credentials: ['jenkins_ssh_key']) {
                        sh """
                        ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} 'sudo docker pull ${JAVA_BASE_IMAGE}'
                        """
                    }
                }
            }
        }

        stage('Build & Deploy') {
            steps {
                script {
                    echo "--------------------"
                    echo "[Build & Deploy]"
                    echo "--------------------"

                    sshagent(credentials: ['jenkins_ssh_key']) {
                        sh """
                        ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} '
                        if [ \$(sudo docker ps -aq -f name=backend_exp) ]; then
                            sudo docker rm -f backend_exp
                        fi

                        sudo docker run -d --name backend_exp --network host ${JAVA_BASE_IMAGE} sh -c "
                        cp -r /home/ubuntu/${GIT_PRJ_NAME} /app && 
                        cd /app && 
                        ./gradlew build && 
                        java -jar /app/build/libs/zzimccong-0.0.1-SNAPSHOT.jar"
                        '
                        """
                    }
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}
